plot(density(Z))
mean(Z)
round(quantile(Z))
Z= rgamma(10000000, 2.2,scale=6)
plot(density(Z))
mean(Z)
round(quantile(Z))
Z= rgamma(10000000, 2.2,scale=5)
plot(density(Z))
mean(Z)
round(quantile(Z))
Z= rgamma(10000000, 2,scale=5)
plot(density(Z))
mean(Z)
round(quantile(Z))
Z= rgamma(10000000, 1.5,scale=5)
plot(density(Z))
mean(Z)
round(quantile(Z))
minimise_this_gamma <- function(param) {
shape=param[1]
scale=param[2]
median = median
LQR = LQR
UQR = UQR
Z= rgamma(10000000, shape, scale=scale)
(LQR - quantile(Z,na.rm=TRUE)[2])^2 + (median - quantile(Z,na.rm=TRUE)[3])^2 + (UQR - quantile(Z,na.rm=TRUE)[4])^2
#(LQR - quantile(Z,na.rm=TRUE)[1])^2 + (median - quantile(Z,na.rm=TRUE)[3])^2 + (UQR - quantile(Z,na.rm=TRUE)[5])^2
}
LQR = 9
median = 10
UQR = 12
Z= rgamma(10000000, 1.5,scale=5)
plot(density(Z))
mean(Z)
round(quantile(Z))
time.start=proc.time()[[3]] #let's see how long this runs for
X_estimate = optim(c(1.5,5),minimise_this_gamma)
time.end=proc.time()[[3]]
time.end-time.start
X_estimate
shape_estimate = X_estimate$par[1]
scale_estimate = X_estimate$par[2]
Z= rgamma(10000000, shape_estimate,scale=scale_estimate)
plot(density(Z))
mean(Z)
round(quantile(Z),digits=2)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
rgamma(1,shape = 21.232443, scale = 0.491891)
resp_length = 10/365
severe_resp_wt = 0.133
mod_resp_wt = 0.051
respt_YLD = burden_dataset_applied_U1[1,3]*severe_resp_wt+(-reduction_incidence_under_one-burden_dataset_applied_U1[1,3])*mod_resp_wt
respt_YLD = respt_YLD*resp_length
respt_YLD
resp_length = 10/365
severe_resp_wt = 0.133
mod_resp_wt = 0.051
respt_YLD = burden_dataset_applied_U1[1,3]*severe_resp_wt+(-reduction_incidence_under_one-burden_dataset_applied_U1[1,3])*mod_resp_wt
respt_YLD = respt_YLD*resp_length
respt_YLD
resp_length = 10/365
severe_resp_wt = 0.133
mod_resp_wt = 0.051
respt_YLD = burden_dataset_applied_U1[1,3]*severe_resp_wt+(-reduction_incidence_under_one-burden_dataset_applied_U1[1,3])*mod_resp_wt
respt_YLD = respt_YLD*resp_length
respt_YLD
resp_length = 10/365
severe_resp_wt = 0.133
mod_resp_wt = 0.051
respt_YLD = burden_dataset_applied_U1[1,3]*severe_resp_wt+(-reduction_incidence_under_one-burden_dataset_applied_U1[1,3])*mod_resp_wt
respt_YLD = respt_YLD*resp_length
respt_YLD
resp_length = 10/365
severe_resp_wt = 0.133
mod_resp_wt = 0.051
respt_YLD = burden_dataset_applied_U1[1,3]*severe_resp_wt+(-reduction_incidence_under_one-burden_dataset_applied_U1[1,3])*mod_resp_wt
respt_YLD = respt_YLD*resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
resp_length = rgamma(1,shape = 21.232443, scale = 0.491891)/365
severe_resp = sum(rbeta(burden_dataset_applied_U1[1,3],13.29,86.62))
mod_resp = sum(rbeta((-reduction_incidence_under_one-burden_dataset_applied_U1[1,3]),5.09,94.77))
respt_YLD = (severe_resp + mod_resp) * resp_length
respt_YLD
seq_prob = 0.247
seq_wt = 0.542
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * seq_wt *num_seq
seq_YLD
seq_prob = rbeta(1,25,75)
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * sum(rbeta(num_seq,18.40972,15.55655))
seq_YLD
seq_prob = rbeta(1,25,75)
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * sum(rbeta(num_seq,18.40972,15.55655)); seq_YLD
seq_prob = rbeta(1,25,75)
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * sum(rbeta(num_seq,18.40972,15.55655)); seq_YLD
seq_prob = rbeta(1,25,75)
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * sum(rbeta(num_seq,18.40972,15.55655)); seq_YLD
seq_YLD
seq_prob = rbeta(1,25,75)
num_seq = seq_prob * burden_dataset_applied_U1[burden_dataset_applied_U1$category == 'pneumoccocal_meningitis' & burden_dataset_applied_U1$measure == 'incidence' , 3]
seq_YLD = ave_YLL_discounted * sum(rbeta(num_seq,18.40972,15.55655)); seq_YLD
seq_YLD
seq_YLD
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(99)_conversion to DALYs.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(99)_conversion to DALYs.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(99)_conversion to DALYs.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(99)_conversion to DALYs.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(99)_conversion to DALYs.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(0)_command_desk.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("~/PhD/Research/1_maternal_pneumococcal/code/R/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
install.packages('ConnMatTools')
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
num_model_increments
time_step = (365.25/12) # number of days of time step
num_model_increments = model_years*365.25/time_step
num_model_increments
P_inital
sum(P_inital)
#setting age structure
P_inital =(rep(0,num_age_groups))
if (pop_distribution == "uniform"){ #uniform distribution according to standard life expectancy
for (i in 1:6){P_inital[i]=N/(life_expectancy*12)}
for (i in 7:15){P_inital[i]=N/(life_expectancy*6)}
P_inital[16]=N*3/life_expectancy
P_inital[17]=N*(life_expectancy-5)/life_expectancy
} else if (pop_distribution=="census") { #age distribution from 2019 DHS survey table 2.8 (aligns with 2015 Population and Housing Census)
for (i in 1:6){P_inital[i]=(0.029*N)/12}
for (i in 7:15){P_inital[i]=(0.029*N)/6}
P_inital[16]=N*0.087 # 2-5 years
P_inital[17]=N*0.855 #5+ age group
}
P_inital
sum(P_inital)
if (sum(P_inital) != N){stop('population not configured correctly!')}
#setting birth rate
nu=P_inital[1]*pop_growth_rate   #set birth rate (per month) to inital number in 0-1 months
mu_import<-read.csv("death_rates.csv") #age distribution of deaths
mu_import
mu
mu = rep(0,num_age_groups)
mu[num_age_groups] = nu
mu
carriage_import
### (A) Carriage
carriage_import<-read.csv("carriage_by_age.csv") #data frame of carriage by age
carriage_import
if (carriage_setting == "2019_model"){
carriage=carriage_import[,2]
} else if (carriage_setting == "2021_model"){
carriage=carriage_import[,3] #TINKER ON
}
carriage=carriage_adj*carriage #set up for sensitivity analysis
### (B) Recovery
recovery_import<-read.csv("recovery_by_age.csv") #data frame of recovery time by age
if (recov_setting == "2019_model"){
recovery=recovery_import[,2]
} else if (recov_setting == "2021_model"){
recovery=recovery_import[,3]
} else if (recov_setting == "2021_lower"){ #note that we were unable to identify the probability distribution used in this paper
recovery=recovery_import[,4]
} else if (recov_setting == "2021_upper"){
recovery=recovery_import[,5]
}
recovery=recov_adj*recovery #set up for sensitivity analysis
### (C) Contact matrix
if (contact_setting == "2019_model"){
contact_matrix <- read.csv("contact_matrix_2019.csv",header=TRUE)
} else if (contact_setting == "2021_model"){
contact_matrix <- read.csv("contact_matrix.csv",header=TRUE)
}
contact_matrix = contact_matrix[-1]
if (covid_sensitivity == "on"){
contact_modification <- read.csv("contact_matrix_covid.csv",header=TRUE) #stores % reduction of contact
contact_matrix= contact_matrix*(1-contact_modification[-1])
}
tranmission_probab
### (D) Transmission probability from contact
if (transmission_setting == "2019_model"){
tranmission_probab <- read.csv("transmission_matrix_2019.csv",header=TRUE)
} else if (transmission_setting == "2021_model"){
tranmission_probab <- read.csv("transmission_matrix_2021.csv",header=TRUE)
}
contact_transmission=contact_matrix*tranmission_probab[-1]
contact_transmission
if (sum(contact_transmission[,]>1)>0){
warning("contact transmission matrix configured incorrectly")
}
ARI_import
inital_infection
num_age_groups
num_age_groups = 17
#(B) multiplying ARI prevalence by % ARI attributable to pneumoccocal
inital_infection =(rep(0,num_age_groups))
for (i in 1:3){
inital_infection[i]=ari*ARI_import[1,2]/100
inital_infection[i+3]=ari*ARI_import[1,2]/100
inital_infection[i+6]=ari*ARI_import[2,2]/100
inital_infection[i+9]=ari*ARI_import[3,2]/100
inital_infection[i+12]=ari*ARI_import[3,2]/100
}
inital_infection[16]=ari*mean(c(ARI_import[4,2],ARI_import[5,2],ARI_import[6,2]),na.rm=FALSE)/100
inital_infection[17]=ari*ARI_import[7,2]/100 #COMEBACK
inital_infection
wan
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(2)_configure_inital_state.R", echo=TRUE)
state
View(next_state)
#       (2/5) Loading PCV characteristics
################################################################################
PCV_start_bracket = c(3,5,7)
PCV_start_bracket = c(3,5,7)
PCV_start_bracket
#8 month - 2 year olds
list_included = c(1:(num_age_groups-2))
list_included
list_included[!(list_included) %in% PCV_start_bracket]
#8 month - 2 year olds
list_included = c(2:(num_age_groups-2))
list_included = list_included[!(list_included) %in% PCV_start_bracket]
list_included
prev_state[,num_age_groups-1]
prev_state[,(num_age_groups-1)]
num_age_groups
prev_state[,15-1]
#       (1/4) Setup
####################################################################
#rm(list=ls()) # clear global environment
#setwd("~/PhD/Research/1_maternal_pneumococcal/code/R")
#setwd("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R")
library(deSolve)
library(dplyr)
#       (2/4) Toggles for sensitivity analysis
####################################################################
model_years = 1  # how many years should the model run for?
complete_model_runs=1
ARI_setting="DHS_2019"
ari = 0.167  # proportion ARI attributable to pneumococcal, options: 0.135 (IPD probe), 0.167 (average), 0.198 (AOM probe), otherwise run (9) beta optimisation!
pcv_effectiveness = "2021_model"  # options: 2019_model, 2021_model, 2021_random_sample 2021_upper_serotype_cov 2021_lower_serotype_cov
pcv_coverage = "2019_DHS"           # options: 2017_MICS, 2019_DHS, 2019_DHS_random_sample, 2019_DHS_lower_bound, 2019_DHS_upper_bound, sensitivity_DTP, sensitivity_MCV, absent
pop_distribution = "uniform"        # choose between "uniform" or "census"
death_distribution = "oldest_only"  #choose between = "oldest_only" or "2019_DHS"
pop_growth_rate =  1              # 1 confers to no growth, estimate is 1.02439 from 2015 Population and Housing Census('Thematic report on population projections')
carriage_adj = 1                  # adjustment for carriage
recov_adj = 1                     # adjustment for recovery
recov_setting = "2021_model"      # options: 2019_model 2021_model 2021_lower 2021_upper
carriage_setting = "2021_model"      # options: 2019_model 2021_model
contact_setting = "2021_model"    # options: 2019_model 2021_model
transmission_setting = "2021_model"    # options: 2019_model 2021_model
mat_waning = "standard"           # choose between "standard", "slower" and "faster"
#blunting options 0.05 (possible), 0.15 (unlikely), 0.30 (very unlikely)
blunting_temp = 0                 # reduction in PCV efficacy as a result of maternal antibody presence
blunting_long = 0                # COMEBACK, need full model instead of quick workaround
burden_disease ="base" #options: "base","LB","UB"
covid_sensitivity = "off"          #options: "on" or "off"
#       (3/4) Run model
####################################################################
for (run_number in 1:complete_model_runs){
source(paste(getwd(),"/(1)_load_model_param.R",sep=""))
# beta is the modification factor on transmission, these values have been fitted with the optimisation function
if (ari == 0.175){
beta =  0.0005505686
} else if (ari == 0.143){
beta =  0.00045
} else if (ari == 0.207){
beta = 0.0006514444
} else if (ari == 0.167){
beta = 0.000525444
} else if (ari == 0.135){
beta = 0.000424711
} else if (ari == 0.198){
beta = 0.000624444
} else{
stop("Your prevalence of ARI has not been fitted, run (9) optimisation")
}
maternal_vaccine_on = "N"
source(paste(getwd(),"/(2)_configure_inital_state.R",sep=""))
source(paste(getwd(),"/(3)_pneum_ode_function.R",sep=""))
source(paste(getwd(),"/(4)_time_step.R",sep=""))
if (run_number == 1){
incid_1000PY_baseline_log <- tail(incidence_1000PY,1)
}
if (run_number > 1){
incid_1000PY_baseline_log <-rbind(incid_1000PY_baseline_log,tail(incidence_1000PY,1))
}
maternal_vaccine_on = "Y"
# options: "Y", Y_higher_eff_pertut, Y_lower_eff_flu, Y_lower_cov_introduction, Y_lower_cov_ANC, Y_lower_cov_tetanus_sufficient
source(paste(getwd(),"/(2)_configure_inital_state.R",sep=""))
source(paste(getwd(),"/(3)_pneum_ode_function.R",sep=""))
source(paste(getwd(),"/(4)_time_step.R",sep=""))
if (run_number == 1){
incid_1000PY_vaccine_log <- tail(incidence_1000PY,1)
}
if (run_number > 1){
incid_1000PY_vaccine_log <-rbind(incid_1000PY_vaccine_log,tail(incidence_1000PY,1))
}
}
vaccine_effect_log <- incid_1000PY_vaccine_log - incid_1000PY_baseline_log
incid_1000PY_vaccine <- colMeans(incid_1000PY_vaccine_log)
incid_1000PY_baseline <- colMeans(incid_1000PY_baseline_log)
#      (4/4) Tabulate results
####################################################################
vaccine_effect_abs <- colMeans(vaccine_effect_log)
vaccine_effect_abs = round(vaccine_effect_abs, digits = 2)
vaccine_effect_sd <- apply(vaccine_effect_log,2,sd)
vaccine_effect_percentage <- 100*(incid_1000PY_baseline - incid_1000PY_vaccine)/incid_1000PY_baseline
vaccine_effect_percentage = round(vaccine_effect_percentage, digits = 2)
final_results <- as.data.frame(rbind(vaccine_effect_abs,vaccine_effect_sd,vaccine_effect_percentage))
colnames(final_results) <- age_group_titles
rownames(final_results) <-c('vaccine effect per 1000PY','vaccine effect S.D. per 1000PY','vaccine effect %')
final_results <- round(final_results, digits = 2)
num_age_groups
collapsed_result <- final_results
collapsed_result$age_band_one <-(final_results [,1]+final_results [,2]+final_results [,3]+final_results [,4]+final_results [,5]+final_results [,6])/6
collapsed_result$age_band_two <-(final_results [,7]+final_results [,8]+final_results [,9])/3
collapsed_result$age_band_three <- (final_results [,10]+final_results [,11]+final_results [,12] +final_results [,13]+final_results [,14] +final_results [,15])/6
collapsed_result <- collapsed_result[,c('age_band_one','age_band_two','age_band_three')]
colnames(collapsed_result) <- c('0-6 months','6-12 months','1-2 years')
final_results [,1:6]
View(vaccine_effect_log)
View(incid_1000PY_vaccine_log)
View(incid_1000PY_baseline_log)
View(incidence_1000PY)
View(incidence_log)
View(sol_log_unedited)
((num_classes-1)*num_age_groups+2):(num_classes*num_age_groups+1)
num_age_groups
num_classes
((num_classes-1)*num_age_groups+2):(num_classes*num_age_groups+1)
### INCIDENCE CALCULATIONS
incidence_log <- sol_log_unedited %>% select(1, ((num_classes-1)*num_age_groups+2):(num_classes*num_age_groups+1))
#select end points of 2 month intervals
incidence_log <- incidence_log %>% filter (time %% 60 == 0, rowSums(incidence_log) != time)
### INCIDENCE CALCULATIONS
incidence_log <- sol_log_unedited %>% select(1, ((num_classes-1)*num_age_groups+2):(num_classes*num_age_groups+1))
increments_number
num_model_increments
time_step
#select end points of 2 month intervals
incidence_log <- incidence_log %>% filter (time %% time_step == 0, rowSums(incidence_log) != time)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(4)_time_step.R", echo=TRUE)
time_step
round(time_step)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(4)_time_step.R", echo=TRUE)
#       (3/4) Run model
####################################################################
for (run_number in 1:complete_model_runs){
source(paste(getwd(),"/(1)_load_model_param.R",sep=""))
# beta is the modification factor on transmission, these values have been fitted with the optimisation function
if (ari == 0.175){
beta =  0.0005505686
} else if (ari == 0.143){
beta =  0.00045
} else if (ari == 0.207){
beta = 0.0006514444
} else if (ari == 0.167){
beta = 0.000525444
} else if (ari == 0.135){
beta = 0.000424711
} else if (ari == 0.198){
beta = 0.000624444
} else{
stop("Your prevalence of ARI has not been fitted, run (9) optimisation")
}
maternal_vaccine_on = "N"
source(paste(getwd(),"/(2)_configure_inital_state.R",sep=""))
source(paste(getwd(),"/(3)_pneum_ode_function.R",sep=""))
source(paste(getwd(),"/(4)_time_step.R",sep=""))
if (run_number == 1){
incid_1000PY_baseline_log <- tail(incidence_1000PY,1)
}
if (run_number > 1){
incid_1000PY_baseline_log <-rbind(incid_1000PY_baseline_log,tail(incidence_1000PY,1))
}
maternal_vaccine_on = "Y"
# options: "Y", Y_higher_eff_pertut, Y_lower_eff_flu, Y_lower_cov_introduction, Y_lower_cov_ANC, Y_lower_cov_tetanus_sufficient
source(paste(getwd(),"/(2)_configure_inital_state.R",sep=""))
source(paste(getwd(),"/(3)_pneum_ode_function.R",sep=""))
source(paste(getwd(),"/(4)_time_step.R",sep=""))
if (run_number == 1){
incid_1000PY_vaccine_log <- tail(incidence_1000PY,1)
}
if (run_number > 1){
incid_1000PY_vaccine_log <-rbind(incid_1000PY_vaccine_log,tail(incidence_1000PY,1))
}
}
vaccine_effect_log <- incid_1000PY_vaccine_log - incid_1000PY_baseline_log
incid_1000PY_vaccine <- colMeans(incid_1000PY_vaccine_log)
incid_1000PY_baseline <- colMeans(incid_1000PY_baseline_log)
#####################################################################
#      (4/4) Tabulate results
####################################################################
vaccine_effect_abs <- colMeans(vaccine_effect_log)
vaccine_effect_abs = round(vaccine_effect_abs, digits = 2)
vaccine_effect_sd <- apply(vaccine_effect_log,2,sd)
vaccine_effect_percentage <- 100*(incid_1000PY_baseline - incid_1000PY_vaccine)/incid_1000PY_baseline
vaccine_effect_percentage = round(vaccine_effect_percentage, digits = 2)
final_results <- as.data.frame(rbind(vaccine_effect_abs,vaccine_effect_sd,vaccine_effect_percentage))
colnames(final_results) <- age_group_titles
rownames(final_results) <-c('vaccine effect per 1000PY','vaccine effect S.D. per 1000PY','vaccine effect %')
final_results <- round(final_results, digits = 2)
collapsed_result <- final_results
collapsed_result$age_band_one <-(final_results [,1]+final_results [,2]+final_results [,3]+final_results [,4]+final_results [,5]+final_results [,6])/6
collapsed_result$age_band_two <-(final_results [,7]+final_results [,8]+final_results [,9])/3
collapsed_result$age_band_three <- (final_results [,10]+final_results [,11]+final_results [,12] +final_results [,13]+final_results [,14] +final_results [,15])/6
collapsed_result <- collapsed_result[,c('age_band_one','age_band_two','age_band_three')]
colnames(collapsed_result) <- c('0-6 months','6-12 months','1-2 years')
final_results [,1:6]
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
num_model_increments
incidence_1000PY <- incidence_log[,-1]
for (i in 1:num_age_groups){
incidence_1000PY[,i] = 1000*num_model_increments*incidence_1000PY[,i]*(1/P_inital[i])
}
### PREVALENCE CALCULATIONS
prevalence=rep(0,14)
for (i in 1:num_age_groups){
total_infected = Is[1,i]+Iv1[1,i]+Iv2[1,i]+Iv3[1,i]+Ism[1,i]+Iv1m[1,i]+Iv2m[1,i]+Iv3m[1,i]
prevalence[i]=100*total_infected/P_inital[i]
}
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
carriage
carriage=carriage_import[,4] #TINKER ON
### (A) Carriage
carriage_import<-read.csv("carriage_by_age.csv") #data frame of carriage by age
carriage=carriage_import[,4] #TINKER ON
carriage
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
carriage
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/R - revisions/(0)_command_desk.R", echo=TRUE)
recovery
