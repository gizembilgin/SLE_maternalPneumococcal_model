prevalence[25],
prevalence[26])
prevalence_summary
source(paste(getwd(),"/(function)_NO_MATERNAL_model_run.R",sep=""))
prevalence_summary = c(sum(prevalence[c(1:6)])/6,
sum(prevalence[c(7:12)])/6,
sum(prevalence[c(13:24)])/12,
prevalence[25],
prevalence[26])
prevalence_summary
beta
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(1)_load_model_param.R", echo=TRUE)
source(paste(getwd(),"/(function)_NO_MATERNAL_model_run.R",sep=""))
prevalence_summary = c(sum(prevalence[c(1:6)])/6,
sum(prevalence[c(7:12)])/6,
sum(prevalence[c(13:24)])/12,
prevalence[25],
prevalence[26])
prevalence_summary
beta
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(9)_beta_optimisation_loop.R", echo=TRUE)
beta
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
prevalence_summary
c(sum(prevalence[c(1:6)])/6,
sum(prevalence[c(7:12)])/6,
sum(prevalence[c(13:24)])/12,
prevalence[25],
prevalence[26])
maternal_vaccine_on = "N"
source(paste(getwd(),"/(2)_configure_inital_state.R",sep=""))
source(paste(getwd(),"/(3)_pneum_ode_function.R",sep=""))
if (ageing_toggle == "cohort"){source(paste(getwd(),"/(4)_time_step.R",sep=""))}
else if (ageing_toggle == "daily"){source(paste(getwd(),"/(4)_time_step_incremental.R",sep=""))}
if (run_number == 1){
incid_1000PY_baseline_log <- tail(incidence_1000PY,1)
}
if (run_number > 1){
incid_1000PY_baseline_log <-rbind(incid_1000PY_baseline_log,tail(incidence_1000PY,1))
}
c(sum(prevalence[c(1:6)])/6,
sum(prevalence[c(7:12)])/6,
sum(prevalence[c(13:24)])/12,
prevalence[25],
prevalence[26])
library(deSolve)
library(dplyr)
library(tidyverse)
#S6.3 population structure  sensitivity analysis_______________________________________________
#S6.3.1 age structure
pop_distribution = "census"
source(paste(getwd(),"/(function)_full_model_run.R",sep=""))
#setting age structure
P_inital =(rep(0,num_age_groups))
if (pop_distribution == "uniform"){ #uniform distribution according to standard life expectancy
for (i in 1:24){P_inital[i]=N/(life_expectancy*12)}
P_inital[num_age_groups-1]=N*3/life_expectancy
P_inital[num_age_groups]=N*(life_expectancy-5)/life_expectancy
} else if (pop_distribution=="census") { #age distribution from 2019 DHS survey table 2.8 (aligns with 2015 Population and Housing Census)
for (i in 1:24){P_inital[i]=(0.029*N)/24}
P_inital[num_age_groups-1]=N*0.087 # 2-5 years
P_inital[num_age_groups]=N*0.855 #5+ age group
}
if (sum(P_inital) != N){stop('population not configured correctly!')}
sum(P_inital)
num_age_groups
#setting age structure
P_inital =(rep(0,num_age_groups))
if (pop_distribution == "uniform"){ #uniform distribution according to standard life expectancy
for (i in 1:24){P_inital[i]=N/(life_expectancy*12)}
P_inital[num_age_groups-1]=N*3/life_expectancy
P_inital[num_age_groups]=N*(life_expectancy-5)/life_expectancy
} else if (pop_distribution=="census") { #age distribution from 2019 DHS survey table 2.8 (aligns with 2015 Population and Housing Census)
for (i in 1:24){P_inital[i]=(0.058*N)/24}
P_inital[num_age_groups-1]=N*0.087 # 2-5 years
P_inital[num_age_groups]=N*0.855 #5+ age group
}
if (sum(P_inital) != N){stop('population not configured correctly!')}
sum(P_inital)
N
#setting age structure
P_inital =(rep(0,num_age_groups))
if (pop_distribution == "uniform"){ #uniform distribution according to standard life expectancy
for (i in 1:24){P_inital[i]=N/(life_expectancy*12)}
P_inital[num_age_groups-1]=N*3/life_expectancy
P_inital[num_age_groups]=N*(life_expectancy-5)/life_expectancy
} else if (pop_distribution=="census") { #age distribution from 2019 DHS survey table 2.8 (aligns with 2015 Population and Housing Census)
for (i in 1:24){P_inital[i]=(0.058*N)/24}
P_inital[num_age_groups-1]=N*0.087 # 2-5 years
P_inital[num_age_groups]=N*0.855 #5+ age group
}
if (round(sum(P_inital)) != N){stop('population not configured correctly!')}
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/FleetDeputy.R", echo=TRUE)
mu_import
sum(mu_import[,3])
save_fleetDeputy = results_warehouse
#S6.3.2 age-specific mortality
death_distribution = "2019_DHS"
source(paste(getwd(),"/(function)_full_model_run.R",sep=""))
sensitivity_mortality= collapsed_result_main
results_warehouse[[7]] = sensitivity_mortality
death_distribution = "oldest_only"
#S6.3.1 population growth
pop_growth_rate = 1
source(paste(getwd(),"/(function)_full_model_run.R",sep=""))
sensitivity_pop_growth = collapsed_result_main
results_warehouse[[8]] = sensitivity_pop_growth
pop_growth_rate =  1
#______________________________________________________________________________________________
#S5.2 Length of Maternally derived Immunity
mat_wan_tracker = data.frame()
wan_list = c('slower','standard','faster')
for (docket in 1:length(wan_list)){
mat_waning = wan_list[docket]
source(paste(getwd(),"/(function)_full_model_run.R",sep=""))
rows = collapsed_result_blunting %>% mutate(wan_speed = mat_waning)
mat_wan_tracker = rbind(mat_wan_tracker,rows)
}
mat_waning = "standard"
results_warehouse[[9]] = mat_wan_tracker
## TABLE 5 (blunting)
round(results_warehouse[[1]][[2]])
### SUPPLEMENTARY MATERIAL ###########################################################################
#S6.1 Infant PCV cov and effectiveness
results_warehouse[[4]]
### SUPPLEMENTARY MATERIAL ###########################################################################
#S6.1 Infant PCV cov and effectiveness
workshop = results_warehouse[[4]]
workshop[,c(1:4)] = round(workshop[,c(1:4)])
workshop = na.omit(workshop)
workshop
#S6.2 COVID_19 sensitivity analysis
results_warehouse[[5]]
#S6.3 population structure  sensitivity analysis
#S6.3.1 age structure
results_warehouse[[6]]
#S6.3.2 age-specific mortality
results_warehouse[[7]]
#S6.3.1 population growth
results_warehouse[[8]]
results_warehouse[[9]]
#S5.2 Length of Maternally derived Immunity
workshop = results_warehouse[[9]]
workshop[,c(1:4)] = round(workshop[,c(1:4)])
workshop = na.omit(workshop)
workshop
pop_growth_rate = 1.02439
source(paste(getwd(),"/(function)_full_model_run.R",sep=""))
sensitivity_pop_growth = collapsed_result_main
results_warehouse[[8]] = sensitivity_pop_growth
pop_growth_rate =  1
#S6.3.1 population growth
results_warehouse[[8]]
### MAIN PAPER ####################################################################################
## TABLE 2 (6 runs)
round(results_warehouse[[1]][[1]])
results_warehouse[[1]][[1]]
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
ari
collapsed_result_main
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(9)_beta_optimisation_loop.R", echo=TRUE)
beta
ari
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/CEA_v1.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_conversion to DALYs.R", echo=TRUE)
cost_final
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source(paste(getwd(),"(99)_conversion to DALYs.R",sep=""))
source(paste(getwd(),"/(99)_conversion to DALYs.R",sep=""))
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
cost_summary
cost_log_long
summary_over_runs\
summary_over_runs
cost_summary
cost_final
total_intervention_costs_100000
total_cost_care_averted
shapiro.test(CEA_log$program_cost) #p=0.271>0.05 therefore normally distributed
#shapiro.test(cost_log$vaccine_costs)
shapiro.test(cost_log$operational_costs)
shapiro.test(cost_log$health_system_costs)
CEA_log_long <- CEA_log %>%
pivot_longer(
cols = program_cost:cost_hospo_averted,
names_to = c('outcome'),
values_to = "cost"
)
summary_over_runs <-
CEA_log_long %>%
group_by(outcome) %>%
dplyr::summarise(average_cost = round(mean(cost),digits=2),
#UCI = CI(cost)[1],
#LCI = CI(cost)[3],
#UCI = round(mean(cost)+qnorm(.975)*sd(cost)/sqrt(complete_CEA_runs),digits=2),
#LCI = round(mean(cost)-qnorm(.975)*sd(cost)/sqrt(complete_CEA_runs),digits=2),
sd = round(sd(cost),digits=2),
LPI = round(mean(cost)-qt(.975,df=(complete_CEA_runs-1))*sd(cost)*sqrt(1+(1/complete_CEA_runs)),digits=2),
UPI = round(mean(cost)+qt(.975,df=(complete_CEA_runs-1))*sd(cost)*sqrt(1+(1/complete_CEA_runs)),digits=2)
)
cost_log_long <- cost_log %>%
pivot_longer(
cols = vaccine_costs:health_system_costs,
names_to = c('component'),
values_to = "cost"
)
cost_summary <-
cost_log_long %>%
group_by(component) %>%
dplyr::summarise(average_cost = round(mean(cost),digits=2),
sd = round(sd(cost),digits=2),
LPI = round(mean(cost)-qt(.975,df=(complete_CEA_runs-1))*sd(cost)*sqrt(1+(1/complete_CEA_runs)),digits=2),
UPI = round(mean(cost)+qt(.975,df=(complete_CEA_runs-1))*sd(cost)*sqrt(1+(1/complete_CEA_runs)),digits=2)
)
cost_summary
94993/(927306+94993)
927306/(927306+94993)
vaccine_cost_100000
dose_cost = mcov * 100000 * price_per_dose
wastage_cost = mcov * 100000 * price_per_dose * (wastage + wastage*freight_costs/2)
freight_cost = mcov * 100000 * price_per_dose * (freight_costs + wastage*freight_costs/2)
injection_equipment = mcov * 100000 * injection_equipment * (1+injection_equipment_wastage)
dose_cost; wastage_cost;freight_cost; injection_equipment
summary_over_runs
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
summary_over_runs
View(summary_over_runs)
summary_over_runs$average_cost[summary_over_runs$outcome == 'cost_DALY_averted']
#       (1/3) Costs of vaccine program
################################################################################
###(A/C) Vaccine costs
# Note, these are all fixed costs
#price_per_dose = 8.63  # 8.63 compared to 2.90 GAVI price for PCV (sensitivity analysis)
#price_per_dose = 2.90
#price_per_dose = 4.5
#price_per_dose = 0.137
price_per_dose = 2.90*8.63/14.5
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
mcov
maternal_vaccine_on = "Y_lower_cov_introduction"
source(paste(getwd(),"/(function)_MATERNAL_ONLY_model_run.R",sep=""))
mcov
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
#       (1/3) Costs of vaccine program
################################################################################
###(A/C) Vaccine costs
# Note, these are all fixed costs
price_per_dose = 8.63  # 8.63 compared to 2.90 GAVI price for PCV (sensitivity analysis)
wastage = 0.05               # % of doses (default 0.05)
freight_costs = 0.045         # % of vaccine value
injection_equipment = 0.044   # equipment required per dose of vaccine
injection_equipment_wastage = 0.1 # % of injection equipment
vaccine_cost_per_dose = price_per_dose * (1 + wastage) * (1 + freight_costs) + injection_equipment * (1+injection_equipment_wastage)
vaccine_cost_100000 = mcov * 100000 * vaccine_cost_per_dose
###(B/C) Operational costs
OC_mean = 0.95; OC_sd = 0.38
OC_a = (OC_mean/OC_sd)^2 ; OC_b = (OC_sd^2)/OC_mean #6.25 and 0.152
if (costing == "fixed"){operational_costs_100000 = 100000*OC_mean
} else if (costing == "rand"){operational_costs_100000 = sum(rgamma(100000, OC_a, scale=OC_b))}
operational_costs_100000=operational_costs_100000*1 #for torando
###(C/C) Total Intervention costs
total_intervention_costs_100000 = vaccine_cost_100000 + operational_costs_100000
###(A/D) Incidence of health outcomes/syndromes averted
# four types of incidence averted as per Figure 1: all other ARI attributable to pneumococcal,pneumococcal pneumonia, pneumococcal meningitis, NPNM
incidence_averted = burden_dataset_applied_U1[burden_dataset_applied_U1$measure == 'incidence',c(1,4)]
incidence_averted[incidence_averted$category == 'total_pneumococcal_burden',2] = round(-reduction_incidence_under_one)-incidence_averted[incidence_averted$category == 'total_pneumococcal_burden',2]
incidence_averted = incidence_averted[,c(2)]
incidence_averted; sum(incidence_averted); reduction_incidence_under_one #CHECK
###(B/D) Branch pneumoccocal presentations into types of care
if (costing == "fixed"){
access_outpatient  = 0.857
access_homeCare =  1- access_outpatient
access_inpatient = 0.652
access_inpatient_mening = access_inpatient/access_outpatient
} else if (costing == "rand"){
access_outpatient  = rbeta(1, 84,14)
access_homeCare =  1- access_outpatient
access_inpatient = rbeta(1, 60,30)
access_inpatient_mening = access_inpatient/access_outpatient
}
# structure as inpatient, outpatient and home care
averted_inpatient = incidence_averted[2] * access_inpatient + incidence_averted[4] * access_inpatient
averted_inpatient_mening = incidence_averted[3] * access_inpatient_mening
averted_outpatient = incidence_averted[1] * access_outpatient +
incidence_averted[2] * access_outpatient +
incidence_averted[3] * 1 +
incidence_averted[4] * access_outpatient
averted_homeCare = incidence_averted[1] * access_homeCare +
incidence_averted[2] * access_homeCare +
incidence_averted[3] * 0 +
incidence_averted[4] * access_homeCare
###(C/D)
#initalise costs
if (costing == "fixed"){
cost_averted = rep(0,4) #inpatient inpatient_mening outpatient homecare
cost_averted[1] = 157.16 * averted_inpatient
cost_averted[2] = 172.57 * averted_inpatient_mening
cost_averted[3] = 0.97 * averted_outpatient
cost_averted[4] = 1.59 * averted_homeCare
} else if (costing == "rand"){
cost_averted = rep(0,4) #inpatient inpatient_mening outpatient homecare
cost_averted[1] = sum(runif(averted_inpatient, min=140.16, max=405.79))
cost_averted[2] = sum(runif(averted_inpatient_mening,min=137.71, max=396.74))
#outpatient costs
OP_mean = 0.97; OP_sd = 0.75
OP_a = (OP_mean/OP_sd)^2 ; OP_b = (OP_sd^2)/OP_mean #1.6, 0.59
cost_averted[3] = sum(rgamma(averted_outpatient, OP_a, scale=OP_b))
cost_averted[4] =  sum(runif(averted_homeCare,min=0, max=3.55))
}
cost_averted = cost_averted
###(D/D)
total_cost_care_averted=sum(cost_averted)
###(D/D)
total_cost_care_averted=sum(cost_averted)
###(C/D)
#initalise costs
if (costing == "fixed"){
cost_averted = rep(0,4) #inpatient inpatient_mening outpatient homecare
cost_averted[1] = 157.16 * averted_inpatient
cost_averted[2] = 172.57 * averted_inpatient_mening
cost_averted[3] = 0.97 * averted_outpatient
cost_averted[4] = 1.59 * averted_homeCare
} else if (costing == "rand"){
cost_averted = rep(0,4) #inpatient inpatient_mening outpatient homecare
cost_averted[1] = sum(runif(averted_inpatient, min=140.16, max=405.79))
cost_averted[2] = sum(runif(averted_inpatient_mening,min=137.71, max=396.74))
#outpatient costs
OP_mean = 0.97; OP_sd = 0.75
OP_a = (OP_mean/OP_sd)^2 ; OP_b = (OP_sd^2)/OP_mean #1.6, 0.59
cost_averted[3] = sum(rgamma(averted_outpatient, OP_a, scale=OP_b))
cost_averted[4] =  sum(runif(averted_homeCare,min=0, max=3.55))
}
averted_inpatient
runif(averted_inpatient, min=140.16, max=405.79)
averted_inpatient
incidence_averted
burden_dataset_applied_U1
maternal_vaccine_on
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
averted_inpatient
burden_dataset_applied_U1
collapsed_result_main
health_outcome_1
burden_dataset_applied
burden_dataset_applied_U1
#quick fix of signs
burden_dataset_applied$maternal_vaccine_reduction = abs(burden_dataset_applied$maternal_vaccine_reduction)
burden_dataset_applied
#quick fix of signs
burden_dataset_applied$maternal_vaccine_reduction = abs(burden_dataset_applied$maternal_vaccine_reduction)
burden_dataset_applied$maternal_vaccine_reduction_rounded = abs(burden_dataset_applied$maternal_vaccine_reduction_rounded)
burden_dataset_applied_U1$mat_vax_reduction_u1  = abs(burden_dataset_applied_U1$mat_vax_reduction_u1 )
burden_dataset_applied_U1$mat_vax_reduction_u1_rounded = abs(burden_dataset_applied_U1$mat_vax_reduction_u1_rounded)
health_outcome_1
burden_dataset_applied
burden_dataset_applied_U1
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
reduction_incidence_under_one
incidence_averted
###(A/D) Incidence of health outcomes/syndromes averted
# four types of incidence averted as per Figure 1: all other ARI attributable to pneumococcal,pneumococcal pneumonia, pneumococcal meningitis, NPNM
incidence_averted = burden_dataset_applied_U1[burden_dataset_applied_U1$measure == 'incidence',c(1,4)]
incidence_averted
incidence_averted[incidence_averted$category == 'total_pneumococcal_burden',2]
round(-reduction_incidence_under_one)-incidence_averted[incidence_averted$category == 'total_pneumococcal_burden',2]
round(-reduction_incidence_under_one)
incidence_averted[incidence_averted$category == 'total_pneumococcal_burden',2]
reduction_incidence_under_one
final_results
ave(as.numeric(final_results[1,1:12]))
mean(as.numeric(final_results[1,1:12]))
reduction_incidence_under_one = reduction_incidence_under_one*100 #now in 100,000
reduction_incidence_under_one
# reduction in cases under one
reduction_incidence_under_one = mean(as.numeric(final_results[1,1:12]))
reduction_incidence_under_one = reduction_incidence_under_one*100 #now in 100,000
reduction_incidence_under_one
incidence_averted
maternal_vaccine_reduction
burden_dataset
burden_dataset_applied_U1 <-cbind(burden_dataset,mat_vax_reduction_u1,mat_vax_reduction_u1_rounded)
burden_dataset_applied_U1
burden_dataset_applied_U1
life_expectancy
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
getwd()
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
burden_disease
burden_dataset
maternal_vaccine_reduction
#need to multiply % reduction in cases under five with burden under five
maternal_vaccine_reduction = rep(0,12)
burden_dataset[burden_dataset$category == 'total_pneumococcal_burden' & burden_dataset$measure == 'incidence',3] *
(health_outcome_1[health_outcome_1$category == 'IPD',2]/100)
burden_dataset[burden_dataset$category == 'total_pneumococcal_burden' & burden_dataset$measure == 'incidence',3]
(health_outcome_1[health_outcome_1$category == 'IPD',2]/100)
health_outcome_1
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(5)_health_outcomes_distribution.R", echo=TRUE)
health_outcome_1
cdf_deaths
outcomes_dataset
CHECK_cdf_outcome_months
cdf_outcome_final
View(cdf_outcome_final)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
gammaParamsConvert
library(deSolve)
library(ConnMatTools)
library(ggplot2)
library(dplyr)
library(tidyverse)
### CONVERT TO HEALTH OUTCOMES
source(paste(getwd(),"/(5)_health_outcomes_distribution.R",sep=""))
health_outcome_0 <- data.frame(t(final_results[3,1:12]))
health_outcome_0 <- cbind(age_months = c(1:12), health_outcome_0)
colnames(health_outcome_0) <- c('age_months','vaccine_effect')
rownames(health_outcome_0) <- c()
health_outcome_0 <- merge(health_outcome_0,cdf_outcome_final,by="age_months")
health_outcome_0 <- health_outcome_0 %>%
mutate(effect = (vaccine_effect/100)*percent_interval)
health_outcome_1 <- aggregate(health_outcome_0$effect, by=list(category=health_outcome_0$outcome), FUN=sum)
source(paste(getwd(),"/(6)_health_outcomes_num.R",sep=""))
#quick fix of signs
burden_dataset_applied$maternal_vaccine_reduction = abs(burden_dataset_applied$maternal_vaccine_reduction)
burden_dataset_applied$maternal_vaccine_reduction_rounded = abs(burden_dataset_applied$maternal_vaccine_reduction_rounded)
burden_dataset_applied_U1$mat_vax_reduction_u1  = abs(burden_dataset_applied_U1$mat_vax_reduction_u1 )
burden_dataset_applied_U1$mat_vax_reduction_u1_rounded = abs(burden_dataset_applied_U1$mat_vax_reduction_u1_rounded)
collapsed_result_main
health_outcome_1
burden_dataset_applied
burden_dataset_applied_U1
prevalence_summary
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
summary_over_runs
reduction_incidence_under_one
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
meff
mcov
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
480/60
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
meff
mcov
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
df
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
ave_YLL
life_expectancy
death_dn_U1
ave_YLL
sum = 0
for (i in 1:6){sum = sum + (life_expectancy-(2*(i-1)+1)/12)*death_dn_U1[i]}
ave_YLL = sum
ave_YLL
sum = 0
for (i in 1:12){sum = sum + (life_expectancy-(i)/12)*death_dn_U1[i]}
ave_YLL = sum
ave_YLL
death_dn_U1
sum = 0
for (i in 1:12){sum = sum + (life_expectancy-(i)/12)*death_dn_U1[i]}
ave_YLL = sum
total_DALYs
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_conversion to DALYs.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
summary_over_runs
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
mocv
mcov
meff
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(2)_configure_inital_state.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(0)_command_desk.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(7)_cost_effectiveness_analysis.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/1_maternal_pneumococcal/code/GitHub_mat_pneumococcal/(99)_tornado_plot.R", echo=TRUE)
